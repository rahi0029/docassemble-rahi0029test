code: |
  exit_button = [{'action': 'https://ucwb.org.au//', 'label': 'Exit', 'color': 'danger'}]
  
---
include:
  - EAP_Service.yml
  - EVP_Service.yml
  - FC_Service.yml
  - NIL_Service.yml
  - N4V_Service.yml  
  - TH_Service.yml    
---
# First question in application
question: Welcome to the Uniting Care Wesley Bowden eligibility application
mandatory: True
subquestion: |
  **This app will help determine your individual eligibility for Uniting Care Wesley Bowden (UCWB) financial services that you wish to access.**
  **Disclaimer:** 
  
  The information contained and processed by this application is for general guidance on matters of eligibility only. The information is not intended to be advice and you should not act specifically on the basis of this information alone.
  
  If you are seeking financial advice, please see a financial adviser. UCWB cannot provide advice as to what financial options are best for you, they can only provide advice as to what options are available to you. A financial adviser will be able to assist you in making a decision as to what option would be best for you.
  
  If expert assistance is required, professional advice should be obtained. This includes for legal matters.
  
  Press *Continue* to continue, or *Exit* to exit to the Uniting Care Wesley Bowden website.
  
buttons: 
  - Continue: continue
  - Exit: exit
    url: https://ucwb.org.au//
---
question: |
  Please enter your full name.
fields:
  - no label: name
action buttons:
  code: exit_button
mandatory: True
---
question: |
  Please provide your preferred contact method and contact details.
fields:
  - Preferred contact method: preferred_contact_method
    choices:
      - Phone Number: phone_number
      - Email: email
  - Phone number: client_phonenumber
  - Email: client_email
action buttons:
  code: exit_button
mandatory: True
---
#Branching logic starts here
---
objects:
  - user: Individual
  - endpoint: DADict
---
mandatory: True
question: |
  What financial service/s are you looking for? (Select all that apply)
fields:
  - no label: user.service
    datatype: checkboxes
    choices:
      - Emergency Assistance: ea_service
        help: |
          This service provides vouchers for essential items and services, including food (through Foodbank), transport, and for pharmacy products. You may also be able to receive assistance for the payment of bills where necessary.
      - Escaping Violence Payment: ev_service
        help: |
          If you are experiencing violence by your partner and are struggling to live safely away from your partner due to financial difficulties you may be eligible for financial assistance through this service.
      - Financial Counselling: fc_service
        help: |
          If you are struggling with financial debt, UCWB's qualified and independent financial counsellors can assist you to plan a way out of your debt. For example, they can talk to debt collectors on your behalf to resolve debt issues. They can also guide you in understanding what other financial options are available to you. 
          *However*, they cannot guide you as to what financial option is best for you. Please seek the assistance of a financial adviser if you need assistance to decide which financial option to take.
      - No Interest Loans: nil_service
        help: |
          This service can provide you with a loan at no interest to purchase essential goods and services. You will need to be able to show you can repay the loan.
      - No Interest Loans for Vehicles: n4v_service
        help: |
          This service is the same as 'No Interest Loans', however is specifically designed for borrowing money to purchase an essential vehicle.
      - Tax Help: th_service
        help: |
            This service is run by UCWB volunteers who are trained by the Australian Taxation Office (ATO) to help you manage your tax obligations. 
action buttons:
  code: exit_button
---
mandatory: True
code: |
    if user.service['ea_service']:
      user.ea_service
      if user.ea_service.all_false():
        endpoint1
      elif user.ea_service.any_true():
        ea_service_q2
        if ea_service_q2:
          endpoint_12
        else:
          suburb_areas
          if suburb_areas:
            endpoint_11
    if user.service['ev_service']:
      user.ev_service
    if user.service['fc_service']:
      user.fc_service
      if user.fc_service.all_false():
        endpoint_3
      elif user.fc_service.any_true():
        suburbs_fc
        if suburbs_fc:
          endpoint_31
        else: 
          areas_fc
          if areas_fc:
            endpoint_32
    if user.service['nil_service']:
      health_care_card
      nil_status
      if nil_status == 'single':
        annual_income_single
        if int(annual_income_single) < 70000:
          loan_repayment_options
          if loan_repayment_options:
            endpoint_41
          else:
            endpoint_42
        else:
          endpoint_4
      else:
          annual_income_couple
          if int(annual_income_couple) < 100000:
            loan_repayment_options
            if loan_repayment_options:
              endpoint_41
            else:
              endpoint_42
          else:
            endpoint_4
    if user.service['n4v_service']:
      health_care_card
      housing_arrangement
      if not housing_arrangement:
        endpoint_4
      else:
        loan_repayment_proof
        if loan_repayment_proof:
          endpoint_41
        else:
          endpoint_42
    if user.service['th_service']:
      income_tax
      if income_tax > 60000:
        endpoint_5
      else:
        circumstances_th
        if circumstances_th.any_true():
          endpoint_5
        else:
          endpoint_51
    ending_screen
---